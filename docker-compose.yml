version: '2'

services:
  nginx-proxy:
    image: nginx
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "conf:/etc/nginx/conf.d"
      - "./volumes/proxy/vhost.d:/etc/nginx/vhost.d"
      - "html:/usr/share/nginx/html"
      - "certs:/etc/nginx/certs:ro"
    networks: 
      - redshinyproxy
  docker-gen:
    image: jwilder/docker-gen
    container_name: nginx-proxy-gen
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx-proxy -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    volumes_from:
      - nginx-proxy
    volumes:
      - "./volumes/proxy/templates/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro"
      - "/var/run/docker.sock:/tmp/docker.sock:ro"
    labels:
      - "com.github.jrcs.letsencrypt_nginx_proxy_companion.docker_gen"
    networks:
      - redshinyproxy
  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nginx-proxy-le
    volumes_from:
      - nginx-proxy
    environment:
      - NGINX_DOCKER_GEN_CONTAINER=docker-gen
    volumes:
      - "certs:/etc/nginx/certs:rw"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - redshinyproxy
  shinyproxy:
    container_name: shinyproxy
    image: martinmontane/shinyproxy_utf8
    expose:
      - 8080
    ports:
      - 8080:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./shinyproxy/:/opt/shinyproxy/app_yml:rw"
    environment:
      - VIRTUAL_HOST=dominioancriptar.com
      - VIRTUAL_NETWORK=redshinyproxy
      - LETSENCRYPT_HOST=dominioancriptar.com
      - LETSENCRYPT_EMAIL=maildereporte@mail.com
    networks:
      - redshinyproxy
    restart: unless-stopped
volumes:
  conf:
  html:
  certs:
networks:
  redshinyproxy:
    external:
      name: redshinyproxy
